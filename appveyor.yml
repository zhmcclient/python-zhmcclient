# Control file for Appveyor CI (https://www.appveyor.com/)
# Must be located in the root directory of the Git repository.

environment:
  matrix:
    - PYTHON_VERSION: 2.7
      PYTHON_ARCH: 32
      PYTHON_HOME: C:\Python27
#    - PYTHON_VERSION: 2.7
#      PYTHON_ARCH: 64
#      PYTHON_HOME: C:\Python27-x64
#    - PYTHON_VERSION: 3.4
#      PYTHON_ARCH: 32
#      PYTHON_HOME: C:\Python34
#    - PYTHON_VERSION: 3.4
#      PYTHON_ARCH: 64
#      PYTHON_HOME: C:\Python34-x64
#    - PYTHON_VERSION: 3.5
#      PYTHON_ARCH: 32
#      PYTHON_HOME: C:\Python35
#    - PYTHON_VERSION: 3.5
#      PYTHON_ARCH: 64
#      PYTHON_HOME: C:\Python35-x64
#    - PYTHON_VERSION: 3.6
#      PYTHON_ARCH: 32
#      PYTHON_HOME: C:\Python36
    - PYTHON_VERSION: 3.6
      PYTHON_ARCH: 64
      PYTHON_HOME: C:\Python36-x64

configuration:
# These values will become the values of the PACKAGE_LEVEL env.var.
#  - minimum
  - latest

install:

  - git --version
  - if %APPVEYOR_REPO_BRANCH%.==manual-ci-run. set _NEED_REBASE=true
  # This Git version requires user configuration in rebase step
  - if %_NEED_REBASE%.==true. git config user.name "dummy"
  - if %_NEED_REBASE%.==true. git config user.email "dummy@dummy"
  - if %_NEED_REBASE%.==true. git fetch origin master
  - if %_NEED_REBASE%.==true. git branch master FETCH_HEAD
  - if %_NEED_REBASE%.==true. git rebase master
  - git branch -av

  # TODO: Use the _MANUAL_CI_RUN variable in tox.ini to run certain parts only when set
  - if %APPVEYOR_REPO_BRANCH%.==manual-ci-run. set _MANUAL_CI_RUN=true
  - if %APPVEYOR_PULL_REQUEST_HEAD_REPO_BRANCH%.==manual-ci-run. set _MANUAL_CI_RUN=true

  # Set PACKAGE_LEVEL for make
  - set PACKAGE_LEVEL=%configuration%

  # Examine the environment
  - echo %PATH%
  - echo %INCLUDE%
  - echo %LIB%
  - dir C:\
  - dir

  # Show OS-level packages available for installation via "choco"
  # Note: "choco" is a Windows installer, similar to "yum" on RHEL.
  - choco source list

  # Add Python
  #- reg ADD HKCU\Software\Python\PythonCore\%PYTHON_VERSION%\InstallPath /ve /d "%PYTHON_HOME%" /t REG_SZ /f
  #- reg ADD HKLM\Software\Python\PythonCore\%PYTHON_VERSION%\InstallPath /ve /d "%PYTHON_HOME%" /t REG_SZ /f
  - set PATH=%PYTHON_HOME%;%PYTHON_HOME%\Scripts;%PATH%

  ## Install pip via get-pip.py - disabled because pip is already installed
  #- ps: (new-object System.Net.WebClient).Downloadfile('https://bootstrap.pypa.io/get-pip.py', 'C:\Users\appveyor\get-pip.py')
  #- ps: Start-Process -FilePath "C:\Python27\python.exe" -ArgumentList "C:\Users\appveyor\get-pip.py" -Wait -Passthru

  # Add CygWin
  - set PATH=C:\cygwin\bin;%PATH%

  ## Example for installing an OS-level package via "choco":
  #
  #- choco install -y <package-name>
  #- set PATH=<package-path>;%PATH%

  ## Example for manually installing OS-level prereqs:
  #
  ## Preparation
  #- echo set _PWD=%%%%~dp0>tmp_prereq_dir.bat
  #- call tmp_prereq_dir.bat
  #- rm tmp_prereq_dir.bat
  #- set _PREREQ_DIR=prereqs
  #- set _PREREQ_ABSDIR=%_PWD%%_PREREQ_DIR%
  #- echo Installing OS-level prereqs into: %_PREREQ_ABSDIR%
  #- mkdir %_PREREQ_DIR%
  #
  ## Install libxml2
  #- set _PKGFILE=libxml2-2.7.8.win32.zip
  #- set _PKGDIR=libxml2-2.7.8.win32
  #- wget -q -P %_PREREQ_DIR% ftp://ftp.zlatkovic.com/libxml/%_PKGFILE%
  #- unzip -q -d %_PREREQ_DIR% %_PREREQ_DIR%/%_PKGFILE%
  #- set INCLUDE=%_PREREQ_ABSDIR%\%_PKGDIR%\include;%INCLUDE%
  #- set LIB=%_PREREQ_ABSDIR%\%_PKGDIR%\lib;%LIB%
  #- set PATH=%_PREREQ_ABSDIR%\%_PKGDIR%\bin;%PATH%

  # Install tox
  - pip install tox==2.0.0

  # Verify that the commands used in tox.ini are available
  - tox --version
  - make --version
  - sh --version

  # Verify that the commands used in Makefile are available
  - bash --version
  - rm --version
  - mv --version
  - find --version
  - tee --version
  - pip --version
  - python --version

# This is not a C# project, build stuff at the test step instead:
build: false

before_test:

test_script:
  - tox -e pywin
